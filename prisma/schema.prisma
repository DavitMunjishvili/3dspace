datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String @id @default(cuid())
  name     String
  lastName String
  phone    String @unique
  email    String @unique
  role     String @default("customer")
  cart     String @default("[]")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  orders   Order[]
  blogs    Blog[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Product {
  id            Int      @id @default(autoincrement())
  name          String
  description   String?
  originalPrice String
  currentPrice  String?
  categories    String[]
  archive       Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blog {
  id Int @id @default(autoincrement())

  title   String
  content String
  views   Int     @default(0)
  archive Boolean @default(false)

  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id Int @id @default(autoincrement())

  isPaid       Boolean @default(false)
  state        String  @default("pending")
  type         String
  orderDetails String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
